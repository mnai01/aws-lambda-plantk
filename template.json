{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "plantk",
  "Transform": ["AWS::Serverless-2016-10-31"],
  "Resources": {
    "getAllItemsFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "src/handlers/get-all-items.getAllItemsHandler",
        "Runtime": "nodejs14.x",
        "Architectures": ["x86_64"],
        "MemorySize": 128,
        "Timeout": 100,
        "Description": "A simple example includes a HTTP get method to get all items from a DynamoDB table.",
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "HousePlantsTable"
              }
            }
          },
          {
            "AWSSecretsManagerGetSecretValuePolicy": {
              "SecretArn": {
                "Ref": "RapidSecretkeyPolicy"
              }
            }
          }
        ],
        "Environment": {
          "Variables": {
            "HOUSE_PLANTS_TABLE": {
              "Ref": "HousePlantsTable"
            }
          }
        },
        "Events": {
          "Api": {
            "Type": "Api",
            "Properties": {
              "Path": "/",
              "Method": "GET"
            }
          }
        }
      }
    },
    "getByIdFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "src/handlers/get-by-id.getByIdHandler",
        "Runtime": "nodejs14.x",
        "Architectures": ["x86_64"],
        "MemorySize": 128,
        "Timeout": 100,
        "Description": "A simple example includes a HTTP get method to get one item by id from a DynamoDB table.",
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "HousePlantsTable"
              }
            }
          }
        ],
        "Environment": {
          "Variables": {
            "HOUSE_PLANTS_TABLE": {
              "Ref": "HousePlantsTable"
            }
          }
        },
        "Events": {
          "Api": {
            "Type": "Api",
            "Properties": {
              "Path": "/{id}",
              "Method": "GET"
            }
          }
        }
      }
    },
    "putItemFunction": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "Handler": "src/handlers/put-item.putItemHandler",
        "Runtime": "nodejs14.x",
        "Architectures": ["x86_64"],
        "MemorySize": 128,
        "Timeout": 100,
        "Description": "A simple example includes a HTTP post method to add one item to a DynamoDB table.",
        "Policies": [
          {
            "DynamoDBCrudPolicy": {
              "TableName": {
                "Ref": "HousePlantsTable"
              }
            }
          }
        ],
        "Environment": {
          "Variables": {
            "HOUSE_PLANTS_TABLE": {
              "Ref": "HousePlantsTable"
            }
          }
        },
        "Events": {
          "Api": {
            "Type": "Api",
            "Properties": {
              "Path": "/",
              "Method": "POST"
            }
          }
        }
      }
    },
    "HousePlantsTable": {
      "Type": "AWS::Serverless::SimpleTable",
      "Properties": {
        "PrimaryKey": {
          "Name": "id",
          "Type": "String"
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 2,
          "WriteCapacityUnits": 2
        }
      }
    },
    "RapidSecretkey": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "Description": "Secret key from rapidAPI that keeps API secure from outside calls",
        "SecretString": "{\"secret\": \"\"}"
      }
    },
    "RapidSecretkeyPolicy": {
      "Type": "AWS::SecretsManager::ResourcePolicy",
      "Properties": {
        "BlockPublicPolicy": true,
        "SecretId": {
          "Ref": "RapidSecretkey"
        },
        "ResourcePolicy": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Resource": "*",
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Deny",
              "Principal": {
                "AWS": {
                  "Fn::Sub": "arn:aws:iam::${AWS::AccountId}:root"
                }
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "WebEndpoint": {
      "Description": "API Gateway endpoint URL for Prod stage",
      "Value": {
        "Fn::Sub": "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
      }
    }
  }
}
